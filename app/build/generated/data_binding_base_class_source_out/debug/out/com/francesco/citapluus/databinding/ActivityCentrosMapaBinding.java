// Generated by view binder compiler. Do not edit!
package com.francesco.citapluus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.francesco.citapluus.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCentrosMapaBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final MaterialButton buttonFavorito;

  @NonNull
  public final MaterialButton buttonGuardarCentro;

  @NonNull
  public final MaterialCardView cardPanelFiltros;

  @NonNull
  public final Chip chipFarmacias;

  @NonNull
  public final Chip chipFavoritos;

  @NonNull
  public final Chip chipHospitales;

  @NonNull
  public final ChipGroup chipsFiltro;

  @NonNull
  public final FloatingActionButton fabMiUbicacion;

  @NonNull
  public final MaterialToolbar topBar;

  private ActivityCentrosMapaBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull MaterialButton buttonFavorito,
      @NonNull MaterialButton buttonGuardarCentro, @NonNull MaterialCardView cardPanelFiltros,
      @NonNull Chip chipFarmacias, @NonNull Chip chipFavoritos, @NonNull Chip chipHospitales,
      @NonNull ChipGroup chipsFiltro, @NonNull FloatingActionButton fabMiUbicacion,
      @NonNull MaterialToolbar topBar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.buttonFavorito = buttonFavorito;
    this.buttonGuardarCentro = buttonGuardarCentro;
    this.cardPanelFiltros = cardPanelFiltros;
    this.chipFarmacias = chipFarmacias;
    this.chipFavoritos = chipFavoritos;
    this.chipHospitales = chipHospitales;
    this.chipsFiltro = chipsFiltro;
    this.fabMiUbicacion = fabMiUbicacion;
    this.topBar = topBar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCentrosMapaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCentrosMapaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_centros_mapa, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCentrosMapaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.buttonFavorito;
      MaterialButton buttonFavorito = ViewBindings.findChildViewById(rootView, id);
      if (buttonFavorito == null) {
        break missingId;
      }

      id = R.id.buttonGuardarCentro;
      MaterialButton buttonGuardarCentro = ViewBindings.findChildViewById(rootView, id);
      if (buttonGuardarCentro == null) {
        break missingId;
      }

      id = R.id.cardPanelFiltros;
      MaterialCardView cardPanelFiltros = ViewBindings.findChildViewById(rootView, id);
      if (cardPanelFiltros == null) {
        break missingId;
      }

      id = R.id.chipFarmacias;
      Chip chipFarmacias = ViewBindings.findChildViewById(rootView, id);
      if (chipFarmacias == null) {
        break missingId;
      }

      id = R.id.chipFavoritos;
      Chip chipFavoritos = ViewBindings.findChildViewById(rootView, id);
      if (chipFavoritos == null) {
        break missingId;
      }

      id = R.id.chipHospitales;
      Chip chipHospitales = ViewBindings.findChildViewById(rootView, id);
      if (chipHospitales == null) {
        break missingId;
      }

      id = R.id.chipsFiltro;
      ChipGroup chipsFiltro = ViewBindings.findChildViewById(rootView, id);
      if (chipsFiltro == null) {
        break missingId;
      }

      id = R.id.fabMiUbicacion;
      FloatingActionButton fabMiUbicacion = ViewBindings.findChildViewById(rootView, id);
      if (fabMiUbicacion == null) {
        break missingId;
      }

      id = R.id.topBar;
      MaterialToolbar topBar = ViewBindings.findChildViewById(rootView, id);
      if (topBar == null) {
        break missingId;
      }

      return new ActivityCentrosMapaBinding((CoordinatorLayout) rootView, appBarLayout,
          buttonFavorito, buttonGuardarCentro, cardPanelFiltros, chipFarmacias, chipFavoritos,
          chipHospitales, chipsFiltro, fabMiUbicacion, topBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
