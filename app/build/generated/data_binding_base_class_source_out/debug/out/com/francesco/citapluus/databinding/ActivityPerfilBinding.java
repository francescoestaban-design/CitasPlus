// Generated by view binder compiler. Do not edit!
package com.francesco.citapluus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CalendarView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.francesco.citapluus.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPerfilBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonActualizarCentro;

  @NonNull
  public final MaterialButton buttonCerrarSesion;

  @NonNull
  public final MaterialButton buttonLlamarEmergencia;

  @NonNull
  public final MaterialButton buttonVolverMenu;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final ChipGroup chipsCitas;

  @NonNull
  public final TextInputEditText editTextCIPA;

  @NonNull
  public final TextInputEditText editTextCodigoPostal;

  @NonNull
  public final TextInputEditText editTextNombreCompleto;

  @NonNull
  public final TextInputEditText editTextTipoSangre;

  @NonNull
  public final LinearLayout layoutIndicadores;

  private ActivityPerfilBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton buttonActualizarCentro, @NonNull MaterialButton buttonCerrarSesion,
      @NonNull MaterialButton buttonLlamarEmergencia, @NonNull MaterialButton buttonVolverMenu,
      @NonNull CalendarView calendarView, @NonNull ChipGroup chipsCitas,
      @NonNull TextInputEditText editTextCIPA, @NonNull TextInputEditText editTextCodigoPostal,
      @NonNull TextInputEditText editTextNombreCompleto,
      @NonNull TextInputEditText editTextTipoSangre, @NonNull LinearLayout layoutIndicadores) {
    this.rootView = rootView;
    this.buttonActualizarCentro = buttonActualizarCentro;
    this.buttonCerrarSesion = buttonCerrarSesion;
    this.buttonLlamarEmergencia = buttonLlamarEmergencia;
    this.buttonVolverMenu = buttonVolverMenu;
    this.calendarView = calendarView;
    this.chipsCitas = chipsCitas;
    this.editTextCIPA = editTextCIPA;
    this.editTextCodigoPostal = editTextCodigoPostal;
    this.editTextNombreCompleto = editTextNombreCompleto;
    this.editTextTipoSangre = editTextTipoSangre;
    this.layoutIndicadores = layoutIndicadores;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPerfilBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPerfilBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_perfil, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPerfilBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonActualizarCentro;
      MaterialButton buttonActualizarCentro = ViewBindings.findChildViewById(rootView, id);
      if (buttonActualizarCentro == null) {
        break missingId;
      }

      id = R.id.buttonCerrarSesion;
      MaterialButton buttonCerrarSesion = ViewBindings.findChildViewById(rootView, id);
      if (buttonCerrarSesion == null) {
        break missingId;
      }

      id = R.id.buttonLlamarEmergencia;
      MaterialButton buttonLlamarEmergencia = ViewBindings.findChildViewById(rootView, id);
      if (buttonLlamarEmergencia == null) {
        break missingId;
      }

      id = R.id.buttonVolverMenu;
      MaterialButton buttonVolverMenu = ViewBindings.findChildViewById(rootView, id);
      if (buttonVolverMenu == null) {
        break missingId;
      }

      id = R.id.calendarView;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.chipsCitas;
      ChipGroup chipsCitas = ViewBindings.findChildViewById(rootView, id);
      if (chipsCitas == null) {
        break missingId;
      }

      id = R.id.editTextCIPA;
      TextInputEditText editTextCIPA = ViewBindings.findChildViewById(rootView, id);
      if (editTextCIPA == null) {
        break missingId;
      }

      id = R.id.editTextCodigoPostal;
      TextInputEditText editTextCodigoPostal = ViewBindings.findChildViewById(rootView, id);
      if (editTextCodigoPostal == null) {
        break missingId;
      }

      id = R.id.editTextNombreCompleto;
      TextInputEditText editTextNombreCompleto = ViewBindings.findChildViewById(rootView, id);
      if (editTextNombreCompleto == null) {
        break missingId;
      }

      id = R.id.editTextTipoSangre;
      TextInputEditText editTextTipoSangre = ViewBindings.findChildViewById(rootView, id);
      if (editTextTipoSangre == null) {
        break missingId;
      }

      id = R.id.layoutIndicadores;
      LinearLayout layoutIndicadores = ViewBindings.findChildViewById(rootView, id);
      if (layoutIndicadores == null) {
        break missingId;
      }

      return new ActivityPerfilBinding((ScrollView) rootView, buttonActualizarCentro,
          buttonCerrarSesion, buttonLlamarEmergencia, buttonVolverMenu, calendarView, chipsCitas,
          editTextCIPA, editTextCodigoPostal, editTextNombreCompleto, editTextTipoSangre,
          layoutIndicadores);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
